/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  UniswapV3Liquidity,
  UniswapV3LiquidityInterface,
} from "../../../../../contracts/aave-v3/mocks/UniswapV3Liquidity.sol/UniswapV3Liquidity";

const _abi = [
  {
    inputs: [],
    name: "createNewPool",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0ToAdd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1ToAdd",
        type: "uint256",
      },
    ],
    name: "mintNewPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nonfungiblePositionManager",
    outputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611269806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063150b7a02146100515780639c725fda14610081578063b44a27221461009f578063f058ebee146100bd575b600080fd5b61006b60048036038101906100669190610a05565b6100f0565b6040516100789190610ac8565b60405180910390f35b610089610105565b6040516100969190610af2565b60405180910390f35b6100a76101d8565b6040516100b49190610b6c565b60405180910390f35b6100d760048036038101906100d29190610b87565b6101f0565b6040516100e79493929190610c01565b60405180910390f35b600063150b7a0260e01b905095945050505050565b600073c36442b4a4522e871399cd717abdd847ab11fe8873ffffffffffffffffffffffffffffffffffffffff166313ead562739a753f0f7886c9fbf63cf59d0d4423c5eface95b73d575d4047f8c667e064a4ad433d04e25187f40bb610bb86b05b96aabfac7cdc4b3b58fc26040518563ffffffff1660e01b81526004016101909493929190610c73565b6020604051808303816000875af11580156101af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d39190610ccd565b905090565b73c36442b4a4522e871399cd717abdd847ab11fe8881565b600080600080739a753f0f7886c9fbf63cf59d0d4423c5eface95b73ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff1660e01b815260040161024793929190610cfa565b6020604051808303816000875af1158015610266573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028a9190610d69565b5073d575d4047f8c667e064a4ad433d04e25187f40bb73ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b81526004016102dc93929190610cfa565b6020604051808303816000875af11580156102fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031f9190610d69565b50739a753f0f7886c9fbf63cf59d0d4423c5eface95b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b373c36442b4a4522e871399cd717abdd847ab11fe88886040518363ffffffff1660e01b8152600401610383929190610d96565b6020604051808303816000875af11580156103a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c69190610d69565b5073d575d4047f8c667e064a4ad433d04e25187f40bb73ffffffffffffffffffffffffffffffffffffffff1663095ea7b373c36442b4a4522e871399cd717abdd847ab11fe88876040518363ffffffff1660e01b815260040161042a929190610d96565b6020604051808303816000875af1158015610449573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046d9190610d69565b506000604051806101600160405280739a753f0f7886c9fbf63cf59d0d4423c5eface95b73ffffffffffffffffffffffffffffffffffffffff16815260200173d575d4047f8c667e064a4ad433d04e25187f40bb73ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff168152602001603c807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff276186105179190610e2a565b6105219190610e94565b60020b8152602001603c807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761861055690610f71565b6105609190610e2a565b61056a9190610e94565b60020b815260200188815260200187815260200160008152602001600081526020013073ffffffffffffffffffffffffffffffffffffffff16815260200142815250905073c36442b4a4522e871399cd717abdd847ab11fe8873ffffffffffffffffffffffffffffffffffffffff166388316456826040518263ffffffff1660e01b81526004016105fb91906110d7565b6080604051808303816000875af115801561061a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063e9190611134565b80955081965082975083985050505050868310156107a357739a753f0f7886c9fbf63cf59d0d4423c5eface95b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b373c36442b4a4522e871399cd717abdd847ab11fe8860006040518363ffffffff1660e01b81526004016106ba9291906111d6565b6020604051808303816000875af11580156106d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fd9190610d69565b506000838861070c91906111ff565b9050739a753f0f7886c9fbf63cf59d0d4423c5eface95b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161075d929190610d96565b6020604051808303816000875af115801561077c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a09190610d69565b50505b858210156108f85773d575d4047f8c667e064a4ad433d04e25187f40bb73ffffffffffffffffffffffffffffffffffffffff1663095ea7b373c36442b4a4522e871399cd717abdd847ab11fe8860006040518363ffffffff1660e01b815260040161080f9291906111d6565b6020604051808303816000875af115801561082e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108529190610d69565b506000828761086191906111ff565b905073d575d4047f8c667e064a4ad433d04e25187f40bb73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016108b2929190610d96565b6020604051808303816000875af11580156108d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f59190610d69565b50505b5092959194509250565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109378261090c565b9050919050565b6109478161092c565b811461095257600080fd5b50565b6000813590506109648161093e565b92915050565b6000819050919050565b61097d8161096a565b811461098857600080fd5b50565b60008135905061099a81610974565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126109c5576109c46109a0565b5b8235905067ffffffffffffffff8111156109e2576109e16109a5565b5b6020830191508360018202830111156109fe576109fd6109aa565b5b9250929050565b600080600080600060808688031215610a2157610a20610902565b5b6000610a2f88828901610955565b9550506020610a4088828901610955565b9450506040610a518882890161098b565b935050606086013567ffffffffffffffff811115610a7257610a71610907565b5b610a7e888289016109af565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610ac281610a8d565b82525050565b6000602082019050610add6000830184610ab9565b92915050565b610aec8161092c565b82525050565b6000602082019050610b076000830184610ae3565b92915050565b6000819050919050565b6000610b32610b2d610b288461090c565b610b0d565b61090c565b9050919050565b6000610b4482610b17565b9050919050565b6000610b5682610b39565b9050919050565b610b6681610b4b565b82525050565b6000602082019050610b816000830184610b5d565b92915050565b60008060408385031215610b9e57610b9d610902565b5b6000610bac8582860161098b565b9250506020610bbd8582860161098b565b9150509250929050565b610bd08161096a565b82525050565b60006fffffffffffffffffffffffffffffffff82169050919050565b610bfb81610bd6565b82525050565b6000608082019050610c166000830187610bc7565b610c236020830186610bf2565b610c306040830185610bc7565b610c3d6060830184610bc7565b95945050505050565b600062ffffff82169050919050565b610c5e81610c46565b82525050565b610c6d8161090c565b82525050565b6000608082019050610c886000830187610ae3565b610c956020830186610ae3565b610ca26040830185610c55565b610caf6060830184610c64565b95945050505050565b600081519050610cc78161093e565b92915050565b600060208284031215610ce357610ce2610902565b5b6000610cf184828501610cb8565b91505092915050565b6000606082019050610d0f6000830186610ae3565b610d1c6020830185610ae3565b610d296040830184610bc7565b949350505050565b60008115159050919050565b610d4681610d31565b8114610d5157600080fd5b50565b600081519050610d6381610d3d565b92915050565b600060208284031215610d7f57610d7e610902565b5b6000610d8d84828501610d54565b91505092915050565b6000604082019050610dab6000830185610ae3565b610db86020830184610bc7565b9392505050565b60008160020b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e3582610dbf565b9150610e4083610dbf565b925082610e5057610e4f610dcc565b5b600160000383147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80000083141615610e8957610e88610dfb565b5b828205905092915050565b6000610e9f82610dbf565b9150610eaa83610dbf565b925082627fffff0482116000841360008413161615610ecc57610ecb610dfb565b5b817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000000583126000841260008413161615610f0957610f08610dfb565b5b827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000000582126000841360008412161615610f4657610f45610dfb565b5b82627fffff0582126000841260008412161615610f6657610f65610dfb565b5b828202905092915050565b6000610f7c82610dbf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000821415610faf57610fae610dfb565b5b816000039050919050565b610fc38161092c565b82525050565b610fd281610c46565b82525050565b610fe181610dbf565b82525050565b610ff08161096a565b82525050565b6101608201600082015161100d6000850182610fba565b5060208201516110206020850182610fba565b5060408201516110336040850182610fc9565b5060608201516110466060850182610fd8565b5060808201516110596080850182610fd8565b5060a082015161106c60a0850182610fe7565b5060c082015161107f60c0850182610fe7565b5060e082015161109260e0850182610fe7565b506101008201516110a7610100850182610fe7565b506101208201516110bc610120850182610fba565b506101408201516110d1610140850182610fe7565b50505050565b6000610160820190506110ed6000830184610ff6565b92915050565b60008151905061110281610974565b92915050565b61111181610bd6565b811461111c57600080fd5b50565b60008151905061112e81611108565b92915050565b6000806000806080858703121561114e5761114d610902565b5b600061115c878288016110f3565b945050602061116d8782880161111f565b935050604061117e878288016110f3565b925050606061118f878288016110f3565b91505092959194509250565b6000819050919050565b60006111c06111bb6111b68461119b565b610b0d565b61096a565b9050919050565b6111d0816111a5565b82525050565b60006040820190506111eb6000830185610ae3565b6111f860208301846111c7565b9392505050565b600061120a8261096a565b91506112158361096a565b92508282101561122857611227610dfb565b5b82820390509291505056fea2646970667358221220dc86c2e5fcf8f1777579cdc226e4b9fce2a857fec1123e8da765fe7fb0d8506864736f6c634300080a0033";

type UniswapV3LiquidityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3LiquidityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3Liquidity__factory extends ContractFactory {
  constructor(...args: UniswapV3LiquidityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniswapV3Liquidity> {
    return super.deploy(overrides || {}) as Promise<UniswapV3Liquidity>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UniswapV3Liquidity {
    return super.attach(address) as UniswapV3Liquidity;
  }
  override connect(signer: Signer): UniswapV3Liquidity__factory {
    return super.connect(signer) as UniswapV3Liquidity__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3LiquidityInterface {
    return new utils.Interface(_abi) as UniswapV3LiquidityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3Liquidity {
    return new Contract(address, _abi, signerOrProvider) as UniswapV3Liquidity;
  }
}
