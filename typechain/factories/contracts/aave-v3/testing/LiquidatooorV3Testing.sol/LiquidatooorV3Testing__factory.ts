/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  LiquidatooorV3Testing,
  LiquidatooorV3TestingInterface,
} from "../../../../../contracts/aave-v3/testing/LiquidatooorV3Testing.sol/LiquidatooorV3Testing";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPoolAddressesProvider",
        name: "_addressesProvider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IPoolAddressesProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POOL",
    outputs: [
      {
        internalType: "contract IPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dex",
    outputs: [
      {
        internalType: "contract IDex",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "premium",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "executeOperation",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_collateral",
        type: "address",
      },
      {
        internalType: "address",
        name: "_liquidatee",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_receiveAToken",
        type: "bool",
      },
    ],
    name: "requestFlashLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c0604052738a3838b7699ad8ba372c5d4aee9ec98ec4e83126600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200006657600080fd5b5060405162001d1338038062001d1383398181016040528101906200008c9190620002d8565b808073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1663026b1d5f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200010d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200013391906200033b565b73ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505050620001876200017b6200018e60201b60201c565b6200019660201b60201c565b506200036d565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200028c826200025f565b9050919050565b6000620002a0826200027f565b9050919050565b620002b28162000293565b8114620002be57600080fd5b50565b600081519050620002d281620002a7565b92915050565b600060208284031215620002f157620002f06200025a565b5b60006200030184828501620002c1565b91505092915050565b62000315816200027f565b81146200032157600080fd5b50565b60008151905062000335816200030a565b92915050565b6000602082840312156200035457620003536200025a565b5b6000620003648482850162000324565b91505092915050565b60805160a05161196b620003a860003960008181610335015281816103b8015281816108b00152610989015260006102c5015261196b6000f3fe6080604052600436106100ab5760003560e01c80637535d246116100645780637535d246146101c757806389476069146101f25780638da5cb5b1461021b578063d4fac45d14610246578063e086e5ec14610283578063f2fde38b1461029a576100b2565b80630542975c146100b75780631b11d0ff146100e25780634dbf6c5a1461011f578063507611cb1461015c578063692058c214610185578063715018a6146101b0576100b2565b366100b257005b600080fd5b3480156100c357600080fd5b506100cc6102c3565b6040516100d99190610ebc565b60405180910390f35b3480156100ee57600080fd5b5061010960048036038101906101049190610fc4565b6102e7565b6040516101169190611079565b60405180910390f35b34801561012b57600080fd5b5061014660048036038101906101419190611094565b610771565b60405161015391906110e3565b60405180910390f35b34801561016857600080fd5b50610183600480360381019061017e919061112a565b610796565b005b34801561019157600080fd5b5061019a61094d565b6040516101a791906111c6565b60405180910390f35b3480156101bc57600080fd5b506101c5610973565b005b3480156101d357600080fd5b506101dc610987565b6040516101e99190611202565b60405180910390f35b3480156101fe57600080fd5b506102196004803603810190610214919061121d565b6109ab565b005b34801561022757600080fd5b50610230610b31565b60405161023d9190611259565b60405180910390f35b34801561025257600080fd5b5061026d60048036038101906102689190611094565b610b5a565b60405161027a91906110e3565b60405180910390f35b34801561028f57600080fd5b50610298610be1565b005b3480156102a657600080fd5b506102c160048036038101906102bc919061121d565b610c6f565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b60008083838101906102f99190611391565b905060008660028961030b91906113ed565b6103159190611447565b90508873ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b815260040161037292919061149d565b6020604051808303816000875af1158015610391573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b591906114db565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1662a718a983600001518b85602001518c87604001516040518663ffffffff1660e01b8152600401610422959493929190611508565b600060405180830381600087803b15801561043c57600080fd5b505af1158015610450573d6000803e3d6000fd5b505050506000826000015190506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663741182426040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f09190611570565b898b6104fc9190611447565b61050691906115cc565b90508173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b815260040161056592919061149d565b6020604051808303816000875af1158015610584573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a891906114db565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634b8860bc826040518263ffffffff1660e01b815260040161060491906110e3565b600060405180830381600087803b15801561061e57600080fd5b505af1158015610632573d6000803e3d6000fd5b5050505060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106719190611259565b602060405180830381865afa15801561068e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b29190611570565b90508460800151816106c491906115fd565b60016000876060015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000876000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107579190611447565b925050819055506001955050505050509695505050505050565b6001602052816000526040600020602052806000526040600020600091509150505481565b60003090506000869050600086905060006040518060a001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff16815260200186151581526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108479190611259565b602060405180830381865afa158015610864573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108889190611570565b81525060405160200161089b91906116c6565b604051602081830303815290604052905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166342b0b77c86868686866040518663ffffffff1660e01b815260040161090f959493929190611786565b600060405180830381600087803b15801561092957600080fd5b505af115801561093d573d6000803e3d6000fd5b5050505050505050505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61097b610cf3565b6109856000610d71565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610ae992919061149d565b6020604051808303816000875af1158015610b08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2c91906114db565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610be9610cf3565b6000610bf3610b31565b905060008173ffffffffffffffffffffffffffffffffffffffff1647604051610c1b90611811565b60006040518083038185875af1925050503d8060008114610c58576040519150601f19603f3d011682016040523d82523d6000602084013e610c5d565b606091505b5050905080610c6b57600080fd5b5050565b610c77610cf3565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ce7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cde906118a9565b60405180910390fd5b610cf081610d71565b50565b610cfb610e35565b73ffffffffffffffffffffffffffffffffffffffff16610d19610b31565b73ffffffffffffffffffffffffffffffffffffffff1614610d6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6690611915565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610e82610e7d610e7884610e3d565b610e5d565b610e3d565b9050919050565b6000610e9482610e67565b9050919050565b6000610ea682610e89565b9050919050565b610eb681610e9b565b82525050565b6000602082019050610ed16000830184610ead565b92915050565b6000604051905090565b600080fd5b600080fd5b6000610ef682610e3d565b9050919050565b610f0681610eeb565b8114610f1157600080fd5b50565b600081359050610f2381610efd565b92915050565b6000819050919050565b610f3c81610f29565b8114610f4757600080fd5b50565b600081359050610f5981610f33565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610f8457610f83610f5f565b5b8235905067ffffffffffffffff811115610fa157610fa0610f64565b5b602083019150836001820283011115610fbd57610fbc610f69565b5b9250929050565b60008060008060008060a08789031215610fe157610fe0610ee1565b5b6000610fef89828a01610f14565b965050602061100089828a01610f4a565b955050604061101189828a01610f4a565b945050606061102289828a01610f14565b935050608087013567ffffffffffffffff81111561104357611042610ee6565b5b61104f89828a01610f6e565b92509250509295509295509295565b60008115159050919050565b6110738161105e565b82525050565b600060208201905061108e600083018461106a565b92915050565b600080604083850312156110ab576110aa610ee1565b5b60006110b985828601610f14565b92505060206110ca85828601610f14565b9150509250929050565b6110dd81610f29565b82525050565b60006020820190506110f860008301846110d4565b92915050565b6111078161105e565b811461111257600080fd5b50565b600081359050611124816110fe565b92915050565b600080600080600060a0868803121561114657611145610ee1565b5b600061115488828901610f14565b955050602061116588828901610f4a565b945050604061117688828901610f14565b935050606061118788828901610f14565b925050608061119888828901611115565b9150509295509295909350565b60006111b082610e89565b9050919050565b6111c0816111a5565b82525050565b60006020820190506111db60008301846111b7565b92915050565b60006111ec82610e89565b9050919050565b6111fc816111e1565b82525050565b600060208201905061121760008301846111f3565b92915050565b60006020828403121561123357611232610ee1565b5b600061124184828501610f14565b91505092915050565b61125381610eeb565b82525050565b600060208201905061126e600083018461124a565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6112c282611279565b810181811067ffffffffffffffff821117156112e1576112e061128a565b5b80604052505050565b60006112f4610ed7565b905061130082826112b9565b919050565b600060a0828403121561131b5761131a611274565b5b61132560a06112ea565b9050600061133584828501610f14565b600083015250602061134984828501610f14565b602083015250604061135d84828501611115565b604083015250606061137184828501610f14565b606083015250608061138584828501610f4a565b60808301525092915050565b600060a082840312156113a7576113a6610ee1565b5b60006113b584828501611305565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113f882610f29565b915061140383610f29565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561143c5761143b6113be565b5b828202905092915050565b600061145282610f29565b915061145d83610f29565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611492576114916113be565b5b828201905092915050565b60006040820190506114b2600083018561124a565b6114bf60208301846110d4565b9392505050565b6000815190506114d5816110fe565b92915050565b6000602082840312156114f1576114f0610ee1565b5b60006114ff848285016114c6565b91505092915050565b600060a08201905061151d600083018861124a565b61152a602083018761124a565b611537604083018661124a565b61154460608301856110d4565b611551608083018461106a565b9695505050505050565b60008151905061156a81610f33565b92915050565b60006020828403121561158657611585610ee1565b5b60006115948482850161155b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006115d782610f29565b91506115e283610f29565b9250826115f2576115f161159d565b5b828204905092915050565b600061160882610f29565b915061161383610f29565b925082821015611626576116256113be565b5b828203905092915050565b61163a81610eeb565b82525050565b6116498161105e565b82525050565b61165881610f29565b82525050565b60a0820160008201516116746000850182611631565b5060208201516116876020850182611631565b50604082015161169a6040850182611640565b5060608201516116ad6060850182611631565b5060808201516116c0608085018261164f565b50505050565b600060a0820190506116db600083018461165e565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561171b578082015181840152602081019050611700565b8381111561172a576000848401525b50505050565b600061173b826116e1565b61174581856116ec565b93506117558185602086016116fd565b61175e81611279565b840191505092915050565b600061ffff82169050919050565b61178081611769565b82525050565b600060a08201905061179b600083018861124a565b6117a8602083018761124a565b6117b560408301866110d4565b81810360608301526117c78185611730565b90506117d66080830184611777565b9695505050505050565b600081905092915050565b50565b60006117fb6000836117e0565b9150611806826117eb565b600082019050919050565b600061181c826117ee565b9150819050919050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611893602683611826565b915061189e82611837565b604082019050919050565b600060208201905081810360008301526118c281611886565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006118ff602083611826565b915061190a826118c9565b602082019050919050565b6000602082019050818103600083015261192e816118f2565b905091905056fea2646970667358221220d81c7dc76f73166ea06fabcecd8b9482c0fc1d085cfcd2e62bfd107ec6ca8f2e64736f6c634300080a0033";

type LiquidatooorV3TestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidatooorV3TestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LiquidatooorV3Testing__factory extends ContractFactory {
  constructor(...args: LiquidatooorV3TestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _addressesProvider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LiquidatooorV3Testing> {
    return super.deploy(
      _addressesProvider,
      overrides || {}
    ) as Promise<LiquidatooorV3Testing>;
  }
  override getDeployTransaction(
    _addressesProvider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_addressesProvider, overrides || {});
  }
  override attach(address: string): LiquidatooorV3Testing {
    return super.attach(address) as LiquidatooorV3Testing;
  }
  override connect(signer: Signer): LiquidatooorV3Testing__factory {
    return super.connect(signer) as LiquidatooorV3Testing__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidatooorV3TestingInterface {
    return new utils.Interface(_abi) as LiquidatooorV3TestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LiquidatooorV3Testing {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LiquidatooorV3Testing;
  }
}
